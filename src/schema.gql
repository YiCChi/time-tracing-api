# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  access_token: String!
}

input CreateProjectInput {
  code: String!
  endDate: DateTime!
  name: String!
  startDate: DateTime!
}

input CreateUserInput {
  email: EmailAddress!
  password: String!
  userName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

input LoginUserInput {
  password: String!
  userName: String!
}

type Mutation {
  createProject(createProjectInput: CreateProjectInput!): Project!
  createUser(createUserInput: CreateUserInput!): User!
  login(loginUserInput: LoginUserInput!): AuthPayload!
  removeProject(id: Int!): String!
  removeUser(id: Int!): String!
  updateProject(updateProjectInput: UpdateProjectInput!): String!
  updateUser(updateUserInput: UpdateUserInput!): String!
}

type Project {
  code: String!
  createdAt: DateTime!
  endDate: DateTime!
  id: Int!
  name: String!
  startDate: DateTime!
  updatedAt: DateTime!
}

type Query {
  project(id: Int!): Project
  projects: [Project]!
  user(id: Int!): User
  users: [User]!
}

input UpdateProjectInput {
  code: String
  endDate: DateTime
  id: Int!
  name: String
  startDate: DateTime
}

input UpdateUserInput {
  email: EmailAddress
  id: Int!
  password: String
  userName: String
}

type User {
  createdAt: DateTime!
  email: EmailAddress!
  id: Int!
  password: String!
  updatedAt: DateTime!
  userName: String!
}